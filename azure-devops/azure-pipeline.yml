trigger:
  branches:
    include:
    - master
    - vnext

# This pipeline is meant to build specific branches for deployment. It's not meant to be a part of PR validation. Ensure that this pipeline is reserved for deployment purposes.
pr: none

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

variables:
  githubToken: <value> # Add a GitHub token in Libraries
  ReplacementText: '@infragistics/igniteui-angular-extras'

jobs:
- job: CommonSteps
  displayName: Common Steps for All Jobs
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    clean: true
    fetchTags: true

  - task: NodeTool@0
    displayName: Use Node 20.x
    inputs:
      versionSpec: 20.x

  - task: ReplaceInFilesTextByText@2
    inputs:
      parameterSearchDirectory: '$(Build.SourcesDirectory)'
      parameterSearchText: 'igniteui-angular-extras'
      parameterReplaceText: '$(ReplacementText)'
      parameterTypeOfSearch: 'filesList'
      parameterFilesList: |
        projects/app-lob/src/app/grid-dynamic-chart-data/grid-dynamic-chart-data.module.ts
        projects/app-lob/src/app/grid-dynamic-chart-data/grid-dynamic-chart-data.component.ts
        projects/app-lob/src/app/app.module.ts
        package.json

  - task: Npm@1
    displayName: npm ci
    inputs:
      command: ci
      workingDir: $(Build.SourcesDirectory)
      verbose: false

  - task: CmdLine@2
    displayName: Clone submodule
    inputs:
      script: git clone --recurse-submodules https://github.com/IgniteUI/igniteui-live-editing-samples igniteui-live-editing-samples
      workingDirectory: $(Build.SourcesDirectory)

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)'
      artifact: 'source-code'
      publishLocation: 'pipeline'

- job: Job_1
  displayName: App CD Build
  dependsOn: CommonSteps
  pool:
    vmImage: ubuntu-latest
  steps:
  - download: current
    artifact: source-code
  - template: templates/cd-template.yml
    parameters:
      customCommand: run generate-live-editing
      workingDir: $(Build.SourcesDirectory)
      submoduleDir: angular-demos
      baseHref: /angular-demos/
      targetFolder: dist/app-lob
      findRegex: angular-demos
      npmBuildCommand: 'run build-ci'

- job: Job_2
  displayName: App CRM Build
  dependsOn: CommonSteps
  pool:
    vmImage: ubuntu-latest
  steps:
  - download: current
    artifact: source-code
  - template: templates/cd-template.yml
    parameters:
      customCommand: run generate-live-editing:app-crm
      workingDir: $(Build.SourcesDirectory)
      submoduleDir: angular-demos-crm
      baseHref: /angular-demos-grid-crm/
      targetFolder: dist/app-crm
      findRegex: angular-demos
      npmBuildCommand: 'run build-ci:app-crm --loglevel verbose'

- job: Job_3
  displayName: App LOB Build
  dependsOn: CommonSteps
  pool:
    vmImage: ubuntu-latest
  steps:
  - download: current
    artifact: source-code
  - template: templates/cd-template.yml
    parameters:
      customCommand: run generate-live-editing:app-lob
      workingDir: $(Build.SourcesDirectory)
      submoduleDir: angular-demos-lob
      baseHref: /angular-demos-lob/
      targetFolder: dist/app-lob
      findRegex: angular-demos
      npmBuildCommand: 'run build-ci:app-lob'