# template.yml
parameters:
  - name: customCommand
    type: string
  - name: workingDir
    type: string
  - name: submoduleDir
    type: string
  - name: baseHref
    type: string
  - name: targetFolder
    type: string
    default: 'dist'
  - name: findRegex
    type: string
  - name: npmBuildCommand
    type: string
    default: ''
  - name: runCleanup
    type: boolean
    default: true

steps:
  # - task: CmdLine@2
  #   displayName: Clone submodule
  #   inputs:
  #     script: git clone --recurse-submodules https://github.com/IgniteUI/igniteui-live-editing-samples igniteui-live-editing-samples
  #     workingDirectory: ${{ parameters.workingDir }}

  - task: CmdLine@2
    displayName: Staging - Git checkout branch
    condition: eq(variables['Build.SourceBranchName'], 'vNext')
    inputs:
      script: git checkout vNext
      workingDirectory: ${{ parameters.workingDir }}/igniteui-live-editing-samples

  - task: CmdLine@2
    displayName: Production - Git checkout branch
    condition: and(eq(variables['Build.SourceBranchName'], 'master'), contains(variables['build.reason'], 'CI'))
    inputs:
      script: git checkout master
      workingDirectory: ${{ parameters.workingDir }}/igniteui-live-editing-samples

  - script: |
      sed -i 's/--configuration production/--base-href=${{ parameters.baseHref }} --configuration production/g' package.json
    displayName: 'Update package.json file'
    workingDirectory: ${{ parameters.workingDir }}

  - task: Npm@1
    displayName: generate live-editing
    inputs:
      command: custom
      workingDir: ${{ parameters.workingDir }}
      verbose: false
      customCommand: ${{ parameters.customCommand }}
  
  - task: CmdLine@2
    displayName: Update to licensed igniteui-angular
    inputs:
      script: npx ng g @igniteui/angular-schematics:upgrade-packages --skip-install
      workingDirectory: ${{ parameters.workingDir }}

  - task: Npm@1
    displayName: ${{ parameters.npmBuildCommand }}
    inputs:
      command: custom
      workingDir: ${{ parameters.workingDir }}
      verbose: false
      customCommand: ${{ parameters.npmBuildCommand }}

  - task: CopyFiles@2
    displayName: Copy web.config
    inputs:
      SourceFolder: $(Build.SourcesDirectory)
      Contents: web.config
      TargetFolder: $(Build.SourcesDirectory)/${{ parameters.targetFolder }}

  - task: RegexReplace@3
    displayName: RegEx Find & Replace
    inputs:
      InputSearchPattern: $(Build.SourcesDirectory)/${{ parameters.targetFolder }}/web.config
      FindRegex: ${{ parameters.findRegex }}
      ReplaceRegex: ${{ parameters.submoduleDir }}
      UseUTF8: false

  - task: PublishPipelineArtifact@1
      displayName: Publish Artifact
      inputs:
        targetPath: $(Build.SourcesDirectory)/${{ parameters.targetFolder }}
        artifact: $(Build.SourceBranchName)-artifact
        publishLocation: pipeline

  - task: Npm@1
    displayName: Staging - Repositorify Angular Demos and LOB Demos
    condition: eq(variables['Build.SourceBranchName'], 'vNext')
    inputs:
      command: custom
      workingDir: ${{ parameters.workingDir }}
      verbose: false
      customCommand: run repositoryfyAngularDemosLob

  - task: Npm@1
    displayName: Production - Repositorify Angular Demos
    condition: and(eq(variables['Build.SourceBranchName'], 'master'), contains(variables['build.reason'], 'CI'))
    inputs:
      command: custom
      workingDir: ${{ parameters.workingDir }}
      verbose: false
      customCommand: run repositoryfyAngularDemosLob:prod

  - task: CmdLine@2
    displayName: Stage changes
    inputs:
      script: git add .
      workingDirectory: ${{ parameters.workingDir }}/igniteui-live-editing-samples/${{ parameters.submoduleDir }}

  - task: CmdLine@2
    displayName: 'Check if there are any changes to be committed'
    inputs:
      script: |
        # Check for changes
        changeCount=$(git status --porcelain | wc -l)
        if [ "$changeCount" -eq 0 ]; then
          echo "##vso[task.logissue type=warning]No changes to commit."
          exit 0
        fi
      workingDirectory: ${{ parameters.workingDir }}/igniteui-live-editing-samples/${{ parameters.submoduleDir }}


  - task: CmdLine@2
    displayName: Commit changes
    inputs:
      script: git commit -m "Automated repository update"
      workingDirectory: ${{ parameters.workingDir }}/igniteui-live-editing-samples/${{ parameters.submoduleDir }}

  - task: CmdLine@2
    displayName: Push changes
    inputs:
      script: git push
      workingDirectory: ${{ parameters.workingDir }}/igniteui-live-editing-samples/${{ parameters.submoduleDir }}

  - task: PostBuildCleanup@4
    displayName: Clean Agent Directories
    condition: eq('${{ parameters.runCleanup }}', 'true')